Question 2:- https://leetcode.com/contest/weekly-contest-335/problems/kth-largest-sum-in-a-binary-tree/

Solution:- 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public long kthLargestLevelSum(TreeNode root, int k) {
        Queue<TreeNode >q=new LinkedList<>();
        ArrayList<Long>a=new ArrayList<>();
       // a.add((long)root.val);
        q.add(root);
        int size=1;
        while(!q.isEmpty())
        {
            size=q.size();
            
            long  ans=0;
            for(int i=0;i<size;i++)
            {
                TreeNode re=q.poll();
                ans+=re.val;
                if(re.left!=null)
                {
                    q.add(re.left);
              
                    
                }
                if(re.right!=null){
                    q.add(re.right);
                   
                }
                
            }
            a.add(ans);
            
        }
        Collections.sort(a);
        if(k>a.size())
        {
            return -1;
        }
        return a.get(a.size()-k);
        
    }
}
